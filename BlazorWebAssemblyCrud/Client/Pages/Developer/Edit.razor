@page "/developer/edit/{developerId:int}"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js
@inject AppState appState;
<h3>Edit</h3>
<Form ButtonText="Update" dev="dev"
      OnValidSubmit="@EditDeveloper" />
@code {
    [Parameter] public int developerId { get; set; }
    Developer dev = new Developer();
    protected async override Task OnParametersSetAsync()
    {
        dev = await http.GetFromJsonAsync<Developer>($"api/developer/{developerId}");
    }
    async Task EditDeveloper()
    {
        try
        {
            await http.PutAsJsonAsync("api/developer", dev);
            await js.InvokeVoidAsync("alert", $"Updated Successfully!");
            uriHelper.NavigateTo("developer");
        }
        catch (HttpRequestException httpRequestException)
        {
            js.InvokeVoidAsync("console.log", "http request exception entró en PUT");
            await js.SaveRegisterForUpdate("api/developer", dev);
            await appState.NotifyUpdatePendingSyncs();
            uriHelper.NavigateTo("developer");
        }
    }
}